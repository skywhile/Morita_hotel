<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.morita.hotel.mapper.CheckinMapper">

    <resultMap type="Checkin" id="CheckinResult">
        <result property="checkinId"    column="checkin_id"    />
        <result property="orderId"    column="order_id"    />
        <result property="roomId"    column="room_id"    />
        <result property="name"    column="name"    />
        <result property="gender"    column="gender"    />
        <result property="phone"    column="phone"    />
        <result property="roomNumber"    column="room_number"    />
    </resultMap>

    <sql id="selectCheckinVo">
        select checkin_id, order_id, room_id, name, gender, phone from checkin
    </sql>

    <select id="selectCheckinList" parameterType="Checkin" resultMap="CheckinResult">
        select c.checkin_id, c.order_id, c.room_id, c.name, c.gender, c.phone,
               r.room_number
        from checkin c
        left join room r on c.room_id = r.room_id
        <where>
            <if test="orderId != null  and orderId != ''"> and c.order_id = #{orderId}</if>
            <if test="roomId != null  and roomId != ''"> and c.room_id = #{roomId}</if>
            <if test="name != null  and name != ''"> and c.name like concat('%', #{name}, '%')</if>
            <if test="roomNumber != null  and roomNumber != ''">
                and r.room_number like concat('%', #{roomNumber}, '%')
            </if>
        </where>
    </select>

    <select id="selectCheckinByCheckinId" parameterType="String" resultMap="CheckinResult">
        <include refid="selectCheckinVo"/>
        where checkin_id = #{checkinId}
    </select>

    <!--根据订单ID查询房间ID-->
    <select id="selectRoomIdByOrderId" resultType="java.lang.String">
        select room_id
        from checkin
        where order_id = #{orderId}
    </select>

    <insert id="insertCheckin" parameterType="Checkin">
        insert into checkin
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="checkinId != null">checkin_id,</if>
            <if test="orderId != null and orderId != ''">order_id,</if>
            <if test="roomId != null and roomId != ''">room_id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="gender != null and gender != ''">gender,</if>
            <if test="phone != null and phone != ''">phone,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="checkinId != null">#{checkinId},</if>
            <if test="orderId != null and orderId != ''">#{orderId},</if>
            <if test="roomId != null and roomId != ''">#{roomId},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="gender != null and gender != ''">#{gender},</if>
            <if test="phone != null and phone != ''">#{phone},</if>
         </trim>
    </insert>

    <update id="updateCheckin" parameterType="Checkin">
        update checkin
        <trim prefix="SET" suffixOverrides=",">
            <if test="orderId != null and orderId != ''">order_id = #{orderId},</if>
            <if test="roomId != null and roomId != ''">room_id = #{roomId},</if>
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="gender != null and gender != ''">gender = #{gender},</if>
            <if test="phone != null and phone != ''">phone = #{phone},</if>
        </trim>
        where checkin_id = #{checkinId}
    </update>

    <delete id="deleteCheckinByCheckinId" parameterType="String">
        delete from checkin where checkin_id = #{checkinId}
    </delete>

    <delete id="deleteCheckinByCheckinIds" parameterType="String">
        delete from checkin where checkin_id in
        <foreach item="checkinId" collection="array" open="(" separator="," close=")">
            #{checkinId}
        </foreach>
    </delete>
</mapper>
